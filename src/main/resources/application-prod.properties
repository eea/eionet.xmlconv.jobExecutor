#port where the application is accessible
server.port=8078

#rabbitmq properties
spring.rabbitmq.host=
spring.rabbitmq.port=
spring.rabbitmq.username=
spring.rabbitmq.password=

#RabbitMQ exchanges, queues and routing keys
#The exchange and routing key where the worker will return the results of the script execution back to converters
job.rabbitmq.jobsResultExchange=main-workers-exchange
job.rabbitmq.jobsResultRoutingKey=xmlconv-job-result
#The queue where the worker is listening to for jobs
job.rabbitmq.listeningQueue=workers-jobs-queue
#The routing key used by workers to send their status back to converters
job.rabbitmq.workerStatusRoutingKey=xmlconv-worker-status
#The routing key used by workers to send their heart beat responses back to converters
heartBeat.response.rabbitmq.routingKey=worker-heart-beat-response-routing
#Exchange where worker binds its heart beat queue to listen on heart beat messages from converters
heartBeat.request.rabbitmq.exchange=xmlconv-heart-beat-request-exchange
#Dead Letter queue properties
rabbitmq.dead.letter.exchange=workers-dead-letter-exchange
rabbitmq.dead.letter.routingKey=workers-dead-letter-routing-key
#expiration time for heart beat messages received from converters in milliseconds
heartBeat.request.message.time.expiration=20000

#Property for enabling class beans overriding
spring.main.allow-bean-definition-overriding=true
#Property for rabbitmq in order for worker to pick up only one message
spring.rabbitmq.listener.simple.prefetch=1

#Property used in order to have messages from workers failing completely(due to e.g memory exception) go directly to DeadLetter queue
spring.rabbitmq.listener.simple.retry.enabled=true

#Url for retrieving container information
rancher.metadata.container.url=http://rancher-metadata/2015-12-19/self/container
#Name of service that handles heavy containers
rancher.heavy.service.name=

#Cache properties
cache.temp.dir=
cache.http.size=2000
cache.http.expiryinterval=120
http.cache.entries=1000
http.cache.objectsize=524288000
http.socket.timeout=30000
http.connect.timeout=30000
http.manager.total=200
http.manager.route=50

#Script Execution properties
#The path of the folder where the scripts are stored in converters
queries.folder=
#The path of the folder where the xsl files are stored in converters
xsl.folder=
#The path of the folder where the result html and zip files are stored in converters
tmp.folder=
#The path of the folder where the xml files are stored in converters
xmlfile.folder=
#The path for our ods folder. This property is used for XSL script execution
ods.folder=


#FME needed properties
fme.host=fme.discomap.eea.europa.eu
fme.port=443
#FME credentials
fme_user=
fme_user_password=
#Token and token expiration parameters. Available timeunits: second, minute, hour, day
fme_token=
fme_synchronous_token=
fme_token_expiration=4
fme_token_timeunit=hour
#The number of hours that we will retry polling for fme job status
fme_retry_hours=1
#Timeout (milliseconds) the system will be waiting to retry a request to fme
fme_timeout=300000
#Timeout (milliseconds) the system will be waiting for a FME response
fme_socket_timeout=720000
#The url in the FME server where we will poll for the job's status
fme_polling_url=https://fme.discomap.eea.europa.eu/fmerest/v3/transformations/jobs/id/
#The url in the FME server where we will download our result zip folder from
fme_result_folder_url=https://fme.discomap.eea.europa.eu/fmerest/v3/resources/connections/FME_SHAREDRESOURCE_DATA/downloadzip/Reportnet2/
#The specific folder in FME server where our result zip folder is stored
fme_result_folder=testdir3
#The url in the FME server with which we will delete our result zip folder
fme_delete_folder_url=https://fme.discomap.eea.europa.eu/fmerest/v3/resources/connections/FME_SHAREDRESOURCE_DATA/filesys/Reportnet2/

#The converters app url
env.converters.url=
#The endpoint in converters to retrieve schema information
converters.schema.retrieval.url=schemas/
#The endpoint in converters to authentication for a host e.g. https://cdr.eionet.europa.eu/
converters.host.authentication.url=host/authentication/
#A valid jwt token in order to make calls to converters endpoints
converters.restapi.token=
#The DD app url
dd.url=
#The endpoint in DD to retrieve release info for a dataset
dd.release.info.url=v2/dataset/releaseInfo/
#A valid jwt token in order to make calls to DD endpoints
dd.restapi.token=

#A format to handle dates
time.format.pattern=dd MMM yyyy HH:mm

#Milliseconds that the thread will sleep for before sending a response message to converters.
response.timeout.ms=5000